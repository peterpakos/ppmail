#!/usr/bin/env python
#
# A tool to send mail via Sendgrid
#
# Author: Peter Pakos <peter.pakos@wandisco.com>

from __future__ import print_function

import argparse
import os
import platform
import sys

import WDMail


class Main(object):
    def __init__(self):
        self._version = '16.8.10'
        self._cwd = os.path.dirname(os.path.realpath(__file__))
        self._name = os.path.splitext(os.path.basename(os.path.realpath(__file__)))[0]

        args = self._parse_args()

        if args.sender:
            sender = args.sender
        else:
            sender = os.getenv('USER') + '@' + platform.node()
        message = ''
        for line in sys.stdin:
            if line != '' and line != '\n':
                message += line

        if len(message) == 0:
            exit()

        wdmail = WDMail.WDMail()
        status = wdmail.send(sender, args.recipients, args.subject, message, args.html, args.cc)
        if status < 300:
            exit()
        else:
            print('\nError')
            exit(1)

    def _parse_args(self):
        parser = argparse.ArgumentParser(description='A tool to send mail via sendgrid')
        parser.add_argument('--version', action='version', version='%s %s' % (self._name, self._version))
        parser.add_argument('-f', '--from', dest='sender',
                            help='email From: field')
        parser.add_argument('-t', '--to', dest='recipients', nargs='+', required=True,
                            help='email To: field', default=[])
        parser.add_argument('-c', '--cc', dest='cc', nargs='+',
                            help='email Cc: field')
        parser.add_argument('-s', '--subject', dest='subject', required=True,
                            help='email Subject: field')
        parser.add_argument('-H', '--html', dest='html', action='store_true',
                            help='send HTML formatted email')
        args = parser.parse_args()
        return args

    def _display_version(self):
        print('%s %s' % (self._name, self._version))


if __name__ == '__main__':
    try:
        main = Main()
    except KeyboardInterrupt:
        print('\nCancelling...')
