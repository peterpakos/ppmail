#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""A tool to send mail via Sendgrid

Copyright (C) 2017 Peter Pakos <peter.pakos@wandisco.com>

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
"""

from __future__ import print_function
import os
import sys
import argparse
import platform
from WDMail import WDMail


class Main(object):
    VERSION = '1.0.0'

    def __init__(self):
        self._cwd = os.path.dirname(os.path.realpath(__file__))
        self._name = os.path.splitext(os.path.basename(os.path.realpath(__file__)))[0]
        self._args = self._parse_args()

        if self._args.sender:
            sender = self._args.sender
        else:
            sender = os.getenv('USER') + '@' + platform.node()

        message = ''
        non_empty = 0

        for line in sys.stdin:
            message += line
            if line != '' and line != '\n':
                non_empty += 1

        if non_empty == 0:
            exit(1)

        wdmail = WDMail()
        status = wdmail.send(
            sender=sender,
            recipients=self._args.recipients,
            subject=self._args.subject,
            message=message,
            html=self._args.html,
            cc=self._args.cc,
            font_size=self._args.font_size
        )

        if status < 300:
            exit()
        else:
            print('\nError')
            exit(1)

    def _parse_args(self):
        parser = argparse.ArgumentParser(description='A tool to send mail via sendgrid')
        parser.add_argument('--version', action='version', version='%s %s' % (self._name, self.VERSION))
        parser.add_argument('-f', '--from', dest='sender',
                            help='email From: field')
        parser.add_argument('-t', '--to', dest='recipients', nargs='+', required=True,
                            help='email To: field', default=[])
        parser.add_argument('-c', '--cc', dest='cc', nargs='+',
                            help='email Cc: field')
        parser.add_argument('-s', '--subject', dest='subject', required=True,
                            help='email Subject: field')
        parser.add_argument('-H', '--html', dest='html', action='store_true',
                            help='send HTML formatted email')
        parser.add_argument('-F', '--font-size', dest='font_size', type=int, default=None,
                            help='font size in px for HTML formatted email (use with -H)')
        args = parser.parse_args()
        return args


if __name__ == '__main__':
    try:
        main = Main()
    except KeyboardInterrupt:
        print('\nCancelling...')
